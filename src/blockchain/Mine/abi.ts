export const abi = [
  {
    type: "constructor",
    inputs: [
      { type: "address", name: "_digdragon", internalType: "contract IERC721" },
      { type: "address", name: "_reward", internalType: "contract IERC20" },
      {
        type: "address",
        name: "_hashPowerStorage",
        internalType: "contract IHashPowerStorage",
      },
      { type: "address", name: "_feeCollector", internalType: "address" },
      { type: "uint256", name: "_startBlock", internalType: "uint256" },
      { type: "uint256", name: "_rewardPerBlock", internalType: "uint256" },
      { type: "uint256", name: "_rewardEndBlock", internalType: "uint256" },
    ],
  },
  {
    type: "function",
    stateMutability: "nonpayable",
    outputs: [],
    name: "emergencyRewardTokenWithdraw",
    inputs: [
      { type: "address", name: "_token", internalType: "address" },
      { type: "uint256", name: "_amount", internalType: "uint256" },
    ],
  },
  {
    type: "function",
    stateMutability: "nonpayable",
    outputs: [],
    name: "emergencyUnstake",
    inputs: [{ type: "address", name: "_owner", internalType: "address" }],
  },
  {
    type: "function",
    stateMutability: "view",
    outputs: [
      {
        type: "tuple",
        name: "info",
        internalType: "struct DigDragonMine.MineInfo",
        components: [
          { type: "address" },
          { type: "address" },
          { type: "address" },
          { type: "address" },
          { type: "uint256" },
          { type: "uint256" },
          { type: "uint256" },
          { type: "uint256" },
          { type: "uint256" },
          { type: "uint256" },
          { type: "uint256" },
          { type: "uint256" },
        ],
      },
    ],
    name: "getMineInfo",
    inputs: [],
  },
  {
    type: "function",
    stateMutability: "view",
    outputs: [{ type: "uint256", name: "", internalType: "uint256" }],
    name: "getMultiplier",
    inputs: [
      { type: "uint256", name: "_from", internalType: "uint256" },
      { type: "uint256", name: "_to", internalType: "uint256" },
    ],
  },
  {
    type: "function",
    stateMutability: "view",
    outputs: [{ type: "uint256", name: "amount", internalType: "uint256" }],
    name: "getRewardDebt",
    inputs: [{ type: "address", name: "_miner", internalType: "address" }],
  },
  {
    type: "function",
    stateMutability: "view",
    outputs: [
      {
        type: "tuple",
        name: "userInfo",
        internalType: "struct DigDragonMine.Miner",
        components: [{ type: "uint256[]" }, { type: "uint256" }],
      },
    ],
    name: "getUserInfo",
    inputs: [{ type: "address", name: "_miner", internalType: "address" }],
  },
  {
    type: "function",
    stateMutability: "view",
    outputs: [{ type: "uint256[]", name: "", internalType: "uint256[]" }],
    name: "getUserStakedTokens",
    inputs: [{ type: "address", name: "_miner", internalType: "address" }],
  },
  {
    type: "function",
    stateMutability: "view",
    outputs: [{ type: "uint256", name: "", internalType: "uint256" }],
    name: "getuserStakedHashPowerAmount",
    inputs: [{ type: "address", name: "_miner", internalType: "address" }],
  },
  {
    type: "function",
    stateMutability: "view",
    outputs: [{ type: "uint256", name: "", internalType: "uint256" }],
    name: "lastRewardBlock",
    inputs: [],
  },
  {
    type: "function",
    stateMutability: "nonpayable",
    outputs: [{ type: "bytes4", name: "", internalType: "bytes4" }],
    name: "onERC721Received",
    inputs: [
      { type: "address", name: "", internalType: "address" },
      { type: "address", name: "", internalType: "address" },
      { type: "uint256", name: "", internalType: "uint256" },
      { type: "bytes", name: "", internalType: "bytes" },
    ],
  },
  {
    type: "function",
    stateMutability: "view",
    outputs: [{ type: "address", name: "", internalType: "address" }],
    name: "owner",
    inputs: [],
  },
  {
    type: "function",
    stateMutability: "view",
    outputs: [
      { type: "address", name: "", internalType: "contract IERC20" },
      { type: "uint256", name: "", internalType: "uint256" },
    ],
    name: "pendingReward",
    inputs: [{ type: "address", name: "_miner", internalType: "address" }],
  },
  {
    type: "function",
    stateMutability: "nonpayable",
    outputs: [],
    name: "renounceOwnership",
    inputs: [],
  },
  {
    type: "function",
    stateMutability: "nonpayable",
    outputs: [],
    name: "setFeeCollector",
    inputs: [{ type: "address", name: "_collector", internalType: "address" }],
  },
  {
    type: "function",
    stateMutability: "nonpayable",
    outputs: [],
    name: "setHashPowerStorage",
    inputs: [
      {
        type: "address",
        name: "_storage",
        internalType: "contract IHashPowerStorage",
      },
    ],
  },
  {
    type: "function",
    stateMutability: "nonpayable",
    outputs: [],
    name: "setMinerAddress",
    inputs: [{ type: "address", name: "_miner", internalType: "address" }],
  },
  {
    type: "function",
    stateMutability: "nonpayable",
    outputs: [],
    name: "setRewardEndBlock",
    inputs: [
      { type: "uint256", name: "_rewardEndBlock", internalType: "uint256" },
    ],
  },
  {
    type: "function",
    stateMutability: "nonpayable",
    outputs: [],
    name: "setRewardPerBlock",
    inputs: [
      { type: "uint256", name: "_rewardPerBlock", internalType: "uint256" },
    ],
  },
  {
    type: "function",
    stateMutability: "nonpayable",
    outputs: [],
    name: "setStartBlock",
    inputs: [{ type: "uint256", name: "_startBlock", internalType: "uint256" }],
  },
  {
    type: "function",
    stateMutability: "nonpayable",
    outputs: [],
    name: "stake",
    inputs: [
      { type: "uint256[]", name: "_tokenIds", internalType: "uint256[]" },
    ],
  },
  {
    type: "function",
    stateMutability: "nonpayable",
    outputs: [],
    name: "stopRewardDistribution",
    inputs: [],
  },
  {
    type: "function",
    stateMutability: "view",
    outputs: [{ type: "uint256", name: "", internalType: "uint256" }],
    name: "totalHashPower",
    inputs: [],
  },
  {
    type: "function",
    stateMutability: "view",
    outputs: [{ type: "uint256", name: "", internalType: "uint256" }],
    name: "totalStakedTokens",
    inputs: [],
  },
  {
    type: "function",
    stateMutability: "nonpayable",
    outputs: [],
    name: "transferOwnership",
    inputs: [{ type: "address", name: "newOwner", internalType: "address" }],
  },
  {
    type: "function",
    stateMutability: "nonpayable",
    outputs: [],
    name: "unstake",
    inputs: [
      { type: "uint256[]", name: "_tokenIds", internalType: "uint256[]" },
    ],
  },
  {
    type: "function",
    stateMutability: "nonpayable",
    outputs: [],
    name: "updatePool",
    inputs: [],
  },
  {
    type: "function",
    stateMutability: "nonpayable",
    outputs: [],
    name: "withdrawReward",
    inputs: [],
  },
  {
    type: "event",
    name: "EmergencyRewardWithDrawn",
    inputs: [],
    anonymous: false,
  },
  { type: "event", name: "EmergencyUnstaked", inputs: [], anonymous: false },
  {
    type: "event",
    name: "HashPowerStorageChanged",
    inputs: [{ type: "address", name: "newStorage", indexed: false }],
    anonymous: false,
  },
  {
    type: "event",
    name: "NewRewardEndBlockSet",
    inputs: [{ type: "uint256", name: "_newRewardBlock", indexed: false }],
    anonymous: false,
  },
  {
    type: "event",
    name: "NewRewardPerBlockSet",
    inputs: [{ type: "uint256", name: "_newRewardPerBlock", indexed: false }],
    anonymous: false,
  },
  {
    type: "event",
    name: "NewStartBlockSet",
    inputs: [{ type: "uint256", name: "_startBlock", indexed: false }],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      { type: "address", name: "previousOwner", indexed: true },
      { type: "address", name: "newOwner", indexed: true },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "RewardDistributionStopped",
    inputs: [{ type: "uint256", name: "stopBlock", indexed: false }],
    anonymous: false,
  },
  {
    type: "event",
    name: "SetNewMiner",
    inputs: [{ type: "address", name: "miner", indexed: false }],
    anonymous: false,
  },
  {
    type: "event",
    name: "Staked",
    inputs: [
      { type: "address", name: "owner", indexed: true },
      { type: "uint256[]", name: "tokenIds", indexed: false },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Unstaked",
    inputs: [
      { type: "address", name: "owner", indexed: true },
      { type: "uint256[]", name: "tokenIds", indexed: false },
    ],
    anonymous: false,
  },
  { type: "error", name: "ZeroStakedHashPowerAmount", inputs: [] },
  { type: "error", name: "ZeroStakedTokens", inputs: [] },
];

// export const address = "0x6d2d548CB51D82bc9C850fc1F1315B8a4665666F";
export const address = "0xf02E47910648Ff8aD82d2faF39F0918f8D369dF7";
